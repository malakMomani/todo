{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","components/header/header.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","addItem","Group","Label","Control","placeholder","onChange","defaultValue","type","min","max","Button","variant","TodoList","ListGroup","className","list","map","Item","complete","toString","key","_id","onClick","deleteItem","handleComplete","text","ToDo","setList","console","log","useEffect","difficulty","assignee","Navbar","bg","Brand","filter","length","Math","random","id","i","toDoList","listItem","newList","Header","Nav","Link","href","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cf3b42a6.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\n\nfunction TodoForm(props) {\n\n  let [item, setItem] = useState();\n\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.addItem(item);\n    const item1 = {};\n    setItem(item1);\n  };\n\n  return (\n    <>\n      <h1>Add To Do Item</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label> Add To Do item\n            <Form.Control\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Difficulty Rating</Form.Label>\n          <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Assigned To</Form.Label>\n          <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n        </Form.Group>\n\n        <Button variant=\"secondary\" type=\"submit\">Add Item</Button>\n      </Form>\n    </>\n  );\n}\n\nexport default TodoForm;","import React from 'react';\nimport { ListGroup, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction TodoList(props) {\n  /* <ListGroup>\n  <ListGroup.Item>No style</ListGroup.Item>\n  <ListGroup.Item variant=\"primary\">Primary</ListGroup.Item>\n  <ListGroup.Item variant=\"secondary\">Secondary</ListGroup.Item>\n  <ListGroup.Item variant=\"success\">Success</ListGroup.Item>\n  <ListGroup.Item variant=\"danger\">Danger</ListGroup.Item>\n  <ListGroup.Item variant=\"warning\">Warning</ListGroup.Item>\n  <ListGroup.Item variant=\"info\">Info</ListGroup.Item>\n  <ListGroup.Item variant=\"light\">Light</ListGroup.Item>\n  <ListGroup.Item variant=\"dark\">Dark</ListGroup.Item>\n</ListGroup> */\n\n  return (\n    <>\n      <ListGroup className=\"list\">\n        {props.list.map(item => (\n\n          <ListGroup.Item\n            className={`complete-${item.complete.toString()} listItem`}\n            key={item._id}\n            variant=\"warning\"\n          >\n            <div>\n              <Button variant=\"danger\" onClick={() => props.deleteItem(item._id)} >X</Button>\n            </div>\n            <span onClick={() => props.handleComplete(item._id)}>\n              {item.text}\n            </span>\n            {/* <Button variant=\"outline-success\" onClick={() => props.updateItem(item._id)}>Update</Button> */}\n\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    </>\n  );\n}\n\nexport default TodoList;","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { Navbar } from 'react-bootstrap';\n\n\nimport './todo.scss';\n\nfunction ToDo() {\n\n  const [list, setList] = useState([]);\n\n  console.log(typeof list);\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let toDoList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(toDoList);\n    }\n\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      let newList = list.filter(listItem => listItem._id !== id);\n      setList(newList);\n    }\n  };\n\n  // this will happen after the initial render ONLY\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(list);\n  }, []);\n\n  return (\n    <div className=\"todoDiv\">\n      <header>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand >To Do List Manager ({list.filter(item => !item.complete).length})</Navbar.Brand>\n        </Navbar>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm addItem={addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={toggleComplete}\n            deleteItem={deleteItem}\n            // updateItem={updateItem}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default ToDo;","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Header() {\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n        </Nav>\n      </Navbar>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo';\nimport Header from './components/header/header';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <ToDo />\n      </>\n    );\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}